name: Build and Publish Docker Image

on:
  workflow_run:
    workflows: ["release"]
    types:
      - completed

permissions:
  contents: read      # Read the repository code
  packages: write     # Push to GitHub Container Registry

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Install CUDA 12.8 and cuDNN 9 via apt (Linux only)
        run: |
          # Add NVIDIA's repository
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.0-1_all.deb
          sudo dpkg -i cuda-keyring_1.0-1_all.deb
          sudo apt-get update
          
          # Install CUDA 12.8
          sudo apt-get install -y cuda-toolkit-12-8 cuda-runtime-12-8
          
          # Install cuDNN 9 (runtime and development)
          sudo apt-get install -y libcudnn9-cuda-12 libcudnn9-dev-cuda-12
          
          # Create symlink for CUDA (build script expects /usr/local/cuda/)
          sudo ln -sf /usr/local/cuda-12.8 /usr/local/cuda
          
      - name: Set up environment variables
        run: |
          echo "CUDA_PATH=/usr/local/cuda" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "CUDNN_PATH=/usr/lib/x86_64-linux-gnu" >> $GITHUB_ENV
          echo "PATH=/usr/local/cuda/bin:$PATH" >> $GITHUB_ENV
          
      - name: Verify installations
        run: |
          echo "CUDA_PATH: $CUDA_PATH"
          echo "CUDNN_PATH: $CUDNN_PATH"
          nvcc --version
          # Check cuDNN
          find /usr -name "libcudnn*" 2>/dev/null | head -5

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Build blue_onyx binaries
        run: |
          cargo build --release --bin blue_onyx

      - name: Prepare Docker context
        run: |
          mkdir docker-context
          cp ./target/release/blue_onyx docker-context/
          cp ./target/release/libonnxruntime.so docker-context/
          cp ./target/release/libonnxruntime_providers_cuda.so docker-context/ || echo "CUDA provider not found, skipping"
          cp ./target/release/libonnxruntime_providers_shared.so docker-context/ || echo "Shared provider not found, skipping"
          cp -r /tmp/models docker-context/models
          cp ./Dockerfile docker-context/

      - name: Get blue_onyx version
        id: get_version
        run: |
          VERSION=$(./target/release/blue_onyx --version | awk '{print $2}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: docker-context
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/blue_onyx:latest
            ghcr.io/${{ github.repository_owner }}/blue_onyx:${{ env.VERSION }}
