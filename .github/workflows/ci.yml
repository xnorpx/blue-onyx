name: ci
on:
  pull_request:
  push:
    branches:
    - master
  schedule:
  - cron: '00 01 * * *'
  workflow_dispatch:

permissions:
  # to fetch code (actions/checkout)
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test-cpu:
    name: build-test-cpu
    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C target-cpu=native -D warnings
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - build: win beta
          os: windows-latest
          rust: beta
        - build: win nightly
          os: windows-latest
          rust: nightly
        - build: win
          os: windows-latest
          rust: stable
        - build: linux beta
          os: ubuntu-latest
          rust: beta
        - build: linux nightly
          os: ubuntu-latest
          rust: nightly
        - build: linux
          os: ubuntu-latest
          rust: stable

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ matrix.rust }}

    - name: Build release blue-onyx
      run: cargo build --release

  rustfmt:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: rustfmt
    - name: Check formatting
      run: cargo fmt --all --check

  clippy:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable
        components: clippy
    - name: Check clippy
      run: cargo clippy --all-targets -- -D warnings

  docs:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - name: Check documentation
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --document-private-items --workspace
